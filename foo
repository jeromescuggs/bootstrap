#!/bin/bash

JRM_INIT=$1

if [[ ! $JRM_INIT == "init" ]]; then
    echo -n "
    +---------------------------------------+
    | to run the foostrapper, please        |
    | re-run this with the 'init' argument! |
    | e.g. \"./foo init\"                     |
    +---------------------------------------+
    "
    exit
    else 
sleep 1
fi 

# fancy method to store the absolute path of this script. will come in handy throughout the bootstrap
JRM_DIR=$(dirname $(readlink -f $0))

# we begin...
echo "initializing... script started from $JRM_DIR"
sleep 1
echo "checking for dependencies..."
sleep 2
# real skeezy way to make sure this script is in proper directory
# will still break if, for some reason, env/lib_list.txt is missing!
if [[ ! -f $JRM_DIR/env/pkg_list.txt ]]; then 
		echo "script cannot find ./env/pkg_list.txt! exiting..." 
		echo "make sure ./init is run from the base of the git repository."
		exit
else 
		echo "found /env folder with package list! let's continue..."
fi 
sleep 1

# git dir - allow user to set custom download path for any downloaded repos
echo -n "+--------------------------------------+
| configure your homedir git directory |
+--------------------------------------+
"
sleep 2
echo "By default, the script will create a directory in $HOME called 'gits'."
echo "During this bootstrap, some repositories will be downloaded to this directory before installation, e.g. node version manager, ls++, etc"
sleep 2
echo "You can enter a different directory name below, or press [Enter] to use defaults." 
echo "WARNING: You cannot change the root path - it will always be created in your home directory!" 
echo "[Enter] or custom dir name:"
read JRM_GIT_VAR

# Check if user set custom dir - if not use default
if [[ -z $JRM_GIT_VAR ]]; then
    JRM_GIT_DIR=$HOME/gits
else 
	JRM_GIT_DIR=$HOME/$JRM_GIT_VAR
fi 
# One last heads-up before we begin 
echo "Git directory set to $JRM_GIT_DIR. Any git repositories which may be downloaded over the course of this bootstrap will be saved to this directory."
sleep 1
# collect the rest of the information needed later

# check for cpu arch - cargo-bay will support x86_64 and aarch64, and some armv7l though not as completely
JRM_ARCH=$(uname -m)

echo -n "
╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱
╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱
╱╱╱╱╱this╱╱╱╱╱is╱╱╱╱╱a╱╱╱╱╱t╱╱e╱╱s╱╱t╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱
╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱
╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱
╱╱╱╱╱╭━━━━╮╱╭━━━╮╱╭━━━╮╱╭━━━━╮╱╭━━╮╱╭━╮╱╭╮╱╭━━━╮╱╭╮╱╱╱╱╱
╱╱╱╱╱┃╭╮╭╮┃╱┃╭━━╯╱┃╭━╮┃╱┃╭╮╭╮┃╱╰┫┣╯╱┃┃╰╮┃┃╱┃╭━╮┃╱┃┃╱╱╱╱╱
╱╱╱╱╱╰╯┃┃╰╯╱┃╰━━╮╱┃╰━━╮╱╰╯┃┃╰╯╱╱┃┃╱╱┃╭╮╰╯┃╱┃┃╱╰╯╱┃┃╱╱╱╱╱
╱╱╱╱╱╱╱┃┃╱╱╱┃╭━━╯╱╰━━╮┃╱╱╱┃┃╱╱╱╱┃┃╱╱┃┃╰╮┃┃╱┃┃╭━╮╱╰╯╱╱╱╱╱
╱╱╱╱╱╱╱┃┃╱╱╱┃╰━━╮╱┃╰━╯┃╱╱╱┃┃╱╱╱╭┫┣╮╱┃┃╱┃┃┃╱┃╰┻━┃╱╭╮╱╱╱╱╱
╱╱╱╱╱╱╱╰╯╱╱╱╰━━━╯╱╰━━━╯╱╱╱╰╯╱╱╱╰━━╯╱╰╯╱╰━╯╱╰━━━╯╱╰╯╱╱╱╱╱
╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱
╱╱╱╱╱no╱╱╱changes╱╱╱were╱╱╱╱╱made╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱
╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱
╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱
╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱
"
echo -n ""
echo " "
sleep 1
clear
echo "alright, let's proceed."
sleep 1
echo "  =========================================="
echo "  █▀▄ █ ▄▀█ █▀▀ █▄ █ █▀█ █▀▀ ▀█▀ █ █▀▀ █▀▀ ▀"
echo "  █▄▀ █ █▀█ █▄█ █ ▀█ █▄█ ▄▄█  █  █ █▄▄ ▄▄█ ▄"
echo "  =========================================="
sleep 2
echo "TESTING, ONE TWO THREE"
echo ""
sleep 1
echo "THIS IS A TEST SCRIPT. NO CHANGES WERE MADE TO YOUR COMPUTER."
echo "THIS SCRIPT MIMICKS THE SETUP OF THE BOOTSTRAPPER TO COLLECT THE FOLLOWING."
sleep 1
echo "variable output check:"
echo "======================"
echo "JRM_INIT: $JRM_INIT"
echo "JRM_DIR: $JRM_DIR"
echo "JRM_GIT_VAR: $JRM_GIT_VAR"
echo "JRM_GIT_DIR: $JRM_GIT_DIR"
echo "JRM_ARCH: $JRM_ARCH"
echo "notes:"
echo "-----------------------"
echo "- if default git directory is chosen, JRM_GIT_VAR will be blank."
# echo ""
# echo ""







